// <auto-generated />
#nullable enable

using PodNet.EnumValues;
using App.Comments;

namespace App.Helpers;
internal static partial class EmojiExtensions
{
    /// <summary>
    /// Gets the associated <see cref="EmojiAttribute"/> value for the <see cref="Sentiment"/> as follows:
    /// <code>
    ///   [Happy] = 0 => "😄"
    /// [Neutral] = 1 => "🙄"
    ///     [Sad] = 2 => "😔"
    ///
    ///       [(int)] => 💥 MissingEnumValueException 💥
    /// </code>
    /// </summary>
    /// <remarks>Uses <see cref="UndefinedValueHandling.ThrowMissingValueException"/> for undefined values.</remarks>
    /// <param name="value">The <see cref="Sentiment"/> value.</param>
    /// <returns>A constant, deterministic string value representing the given <paramref name="value"/>.</returns>
    /// <exception cref="MissingEnumValueException">Thrown when the provided <paramref name="value"/> is not declared as a named enum member.</exception>
    internal static string GetEmojiForSentiment(this Sentiment value)
        => value switch
        {
            Sentiment.Happy => "😄",
            Sentiment.Neutral => "🙄",
            Sentiment.Sad => "😔",
            _ => throw new MissingEnumValueException(typeof(Sentiment), value)
        };
}
#nullable restore